ARG ENV_TYPE

FROM ubuntu:latest

WORKDIR /app

# copying all folders
COPY . .

# Remove existing build, install, and log directories
RUN rm -rf build install log

# for ROS2
RUN apt update && apt install locales -y
RUN locale-gen en_US en_US.UTF-8
RUN update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
RUN export LANG=en_US.UTF-8
RUN apt install software-properties-common -y
RUN add-apt-repository universe
RUN apt update && apt install curl gnupg lsb-release -y
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
# use bash instead of sh start
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Create a .profile
RUN echo 'PATH=$PATH:/foo/bar' > ~/.profile

# Create a .bash_profile
RUN echo 'PATH=$PATH:/hello-world' > ~/.bash_profile

RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
RUN apt update 
RUN apt upgrade -y
# if did not have the line below ros installation would ask for geo location
ENV DEBIAN_FRONTEND=noninteractive

# ROS2 Humble
RUN apt-get install ros-humble-ros-base -y 

# Tools
RUN apt-get install -y \
    python3-rosdep \
    python3-colcon-common-extensions \
    g++ \
    ros-humble-rosbridge-suite

# Realsense
RUN apt-get update \
 && apt-get install -y \
    build-essential \
    cmake \
    git-all

RUN apt-get install -y \
    ros-humble-librealsense2* \
    ros-humble-realsense2-*

# Install some additional tools for development
apt-get install -y ros-humble-rviz2 ~nros-humble-rqt*; \

# Rosdep
RUN rosdep init
RUN rosdep update

# Setting up more ROS things from the tutorial
RUN echo "source /opt/ros/humble/setup.bash; source /app/install/local_setup.bash" >> ~/.bashrc
RUN source ~/.bashrc

# Install dependencies and build the workspace
RUN rosdep install -i --from-path src --rosdistro humble -y
RUN source /opt/ros/humble/setup.bash && colcon build --symlink-install

ENTRYPOINT ["docker_scripts/jetson/ros_entrypoint.sh"]
